services:
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_DB: my_service_db
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"

  node_app:
    build: ./node-app
    restart: always
    ports:
      - "3001:3001"
    environment:
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_NAME: my_service_db
      DB_HOST: db
      DB_PORT: 5432
      PORT: 3001
      MOCK_MIN_DELAY_MS: 50
      MOCK_MAX_DELAY_MS: 500
    depends_on:
      - db

  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    depends_on:
      - node_app

  grafana:
    image: grafana/grafana:latest
    restart: always
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
  
  k6:
    image: grafana/k6:latest
    container_name: k6_load_tester
    volumes:
      - ./load-tests:/scripts
    environment:
      K6_PROMETHEUS_RW_SERVER_URL: http://prometheus:9090/api/v1/write
      K6_PROMETHEUS_RW_PUSH_INTERVAL: 1s
    command: sleep infinity
    depends_on:
      - node_app
    networks:
      - default

volumes:
  db_data:
  grafana_data:

networks:
  default: